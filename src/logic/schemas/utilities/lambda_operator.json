{
  "type": "object",
  "properties": {
    "id": {
      "$ref": "definitions.json#/definitions/id"
    },
    "descriptors": {
      "type": "object",
      "properties": {
        "name": {
          "const": "lambda_operator"
        },
        "outputType": {
          "oneOf": [
            {
              "const": null
            },
            {
              "$ref": "definitions.json#/definitions/streamTypes/any"
            }
          ]
        },
        "inputType": {
          "oneOf": [
            {
              "const": null
            },
            {
              "$ref": "definitions.json#/definitions/streamTypes/any"
            }
          ]
        }
      }
    },
    "parameters": {
      "type": "object",
      "properties": {
        "functionName": {
          "type": "string"
        },
        "functionBody": {
          "type": "string"
        }
      },
      "required": [
        "functionName",
        "functionBody"
      ]
    },
    "outputs": {
      "$ref": "definitions.json#/definitions/output"
    },
    "input": {
      "$ref": "definitions.json#/definitions/input"
    },
    "function": {
      "const": "lambda_operator()"
    },
    "hint": {
      "const": "This function allows the definition of an operator according to a function defined somewhere else. It is the most flexible operator and, in case a value is return, then the pipeline will continue. If None is returned, then the pipeline does not continue."
    }
  },
  "required": [
    "id",
    "parameters",
    "outputs"
  ]
}